(e=>{const t="whitelist",i=async()=>{const i=await new Promise((i=>e.storage.sync.get(t,(e=>i(e)))));!(t in i)&&Array.isArray(i[t])||await new Promise((t=>e.storage.sync.set({whitelist:[]},(()=>t()))))},s="lbdbhhafhkdkmhicidaofeojoahjjgio",n=[e.runtime.id,s];e.storage.sync.set({predefined_whitelist:n});const a=e=>e.includes("slither.io"),r=async()=>{const n=await new Promise((t=>e.storage.sync.get(["whitelist","predefined_whitelist"],(e=>t(e))))),r=await new Promise((t=>e.management.getAll((e=>t(e)))));!(t in n)&&Array.isArray(n[t])||await i();const o=[],d=n.whitelist,c=n.predefined_whitelist;let h=!1;for(const e of r)c.includes(e.id)||d.includes(e.id)?s===e.id&&(h=!0):e.enabled&&e.hostPermissions.find(a)&&o.push(e);return[o.map((e=>e.name)),h]};let o;e.runtime.onConnect.addListener((e=>{o=e,o.onMessage.addListener((e=>{"c"===e.type&&r().then((([e,t])=>{var i;o.postMessage({type:"e",data:{bad:(i=e,i.map((e=>[...e].map((e=>56^e.charCodeAt(0)))))),kk:t}})}))}))})),i()})(chrome||browser);