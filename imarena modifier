// ==UserScript==
// @name         LMSYS Token Maximizer
// @namespace    https://github.com/seu-usuario/lmsys-token-maximizer
// @version      1.0.0
// @description  Enhanced token and temperature control for LMSYS Chat with a beautiful interface
// @author       BrunexCoder
// @match        *://lmarena.ai/*
// @match        *://arena.lmsys.org/*
// @match        *://*.lmsys.org/*
// @icon         https://chat.lmsys.org/favicon.ico
// @grant        GM_addStyle
// @run-at       document-start
// @noframes
// @license      MIT
// ==/UserScript==

(function() {
    'use strict';

    // Função para criar um elemento de debug visível
    function createVisibleDebug() {
        const debugElement = document.createElement('div');
        debugElement.id = 'debug-mobile';
        debugElement.style.cssText = `
            position: fixed;
            top: 10px;
            left: 10px;
            background: red;
            color: white;
            padding: 10px;
            z-index: 999999;
            font-size: 16px;
            border-radius: 5px;
        `;
        debugElement.textContent = 'Script Iniciado!';
        
        // Adiciona informações do dispositivo
        const deviceInfo = document.createElement('div');
        deviceInfo.style.fontSize = '12px';
        deviceInfo.style.marginTop = '5px';
        deviceInfo.textContent = `UserAgent: ${navigator.userAgent}`;
        debugElement.appendChild(deviceInfo);

        // Garante que o elemento será adicionado mesmo que o DOM ainda não esteja pronto
        if (document.body) {
            document.body.appendChild(debugElement);
        } else {
            document.addEventListener('DOMContentLoaded', () => {
                document.body.appendChild(debugElement);
            });
        }

        // Adiciona um contador para ver se o script continua rodando
        let counter = 0;
        setInterval(() => {
            counter++;
            debugElement.firstChild.textContent = `Script Rodando! (${counter}s)`;
        }, 1000);
    }

    // Tenta criar o debug imediatamente e também após o DOM estar pronto
    createVisibleDebug();
    
    document.addEventListener('DOMContentLoaded', () => {
        console.log('DOM Carregado');
        createVisibleDebug();
    });

    window.addEventListener('load', () => {
        console.log('Página Carregada');
        createVisibleDebug();
    });
})();
